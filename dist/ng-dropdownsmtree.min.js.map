{"version":3,"sources":["ng-dropdownsmtree.js"],"names":["angular","module","directive","$filter","require","replace","childArrays","parentArray","childArraysItemDisplayField","parentArrayItemDisplayField","childArraysItemSearchField","disabled","titlePlaceholder","template","html","iAttrs","controlClass","searchPlaceholder","parentArrayItemIdField","childArraysItemParentId","link","scope","iElement","ctrl","showSecondLevel","$viewValue","clickedItem","currentTarget","event","content","onEnter","$","elm","removeClass","SearchSubjectFLTR","length","setselecteditem","_arr","i","$setViewValue","sb","find","addClass","srcElement","closest","css","attr","slideToggle","toggleClass","keyCode","$render"],"mappings":"AAAA,aAEAA,QAAQC,OAAO,mBAAoB,IAE/BC,UAAO,mBAAA,CAAA,UAAA,SAAAC,GACH,MAAA,CAEAC,SAAS,KACTC,QAAQ,UACRA,SAAA,EAEIC,MAAAA,CACAC,YAAa,IACbC,YAAAA,IACAC,4BAA6B,IAC7BC,4BAA4B,IAC5BC,2BANG,IAOHC,SAAAA,IAbDA,iBAAA,KAoBCC,SAAMC,SAAAA,EAAAA,GAyCE,MAtBRA,+HAvCDC,EAAAC,aAuCC,2gBAb2DD,EAAOE,kBAalE,iBAboGF,EAAOE,kBAa3G,sTAOqBF,EAAAG,uBAPrB,2ZAT+EH,EAAOI,wBAStF,WATyHJ,EAAOG,uBAShI,uBAT8KH,EAAOL,2BASrL,waA8BCU,KAhBD,SAAAC,EAAAC,EAAAP,EAAAQ,GAkBAF,EAAAA,QAAMG,WAxBCD,EAAKE,WA0BRJ,EAAMK,oBAAsBC,EAAAA,WAAiBC,YAE7CP,EAAGQ,oBAAAR,EAA2BT,kBAM9Bc,EAAAA,oBAAiB,WAIrBL,IAAMS,EAAUC,EAAAT,GAACM,KAAS,MAA1B,GACII,EAAGJ,KAAAA,wBAAqBK,YAAA,YAD5B,EAAAZ,EAAAa,kBAAAC,OAMMC,IA9BE,IAAMC,EAAOlC,EAAQ,SAAUkB,EAAMX,2BAAxBP,CAAoDkB,EAAMf,YAAae,EAAMa,mBA8B5FE,EAAN,EAAwBE,EAAAD,EAAAF,OAAQG,IAC5B,OAAKC,EAAAA,GAAcC,EAAnBrB,yBACAa,EAAAS,KAAA,uBAAAC,SAAA,YAGPV,EAAAS,KAAA,aAAAJ,EAAAC,GAAAvB,EAAAI,yBAAA,WAAAuB,SAAA,aAzBGrB,EAAMG,gBAAkB,SAACI,GAErB,IAAMF,EAAcK,EAAEH,EAAMD,eAAiBC,EAAMe,YAAYC,QAAQ,MACjEf,EAAUH,EAAYe,KAAK,YACH,SAA3BZ,EAAQgB,IAAI,WACXnB,EAAYoB,KAAK,gBAAgB,SAEjCpB,EAAYoB,KAAK,gBAAgB,QAErCjB,EAAQkB,YAAY,KACpBrB,EAAYe,KAAK,cAAcO,YAAY,mCAI/C3B,EAAMS,QAAU,SAACF,GACQ,KAAlBA,EAAMqB,SACL5B,EAAMG,gBAAgBI,IAI9BP,EAAMe,gBAAkB,SAACI,GACrBjB,EAAKgB,cAAcC,GACnBjB,EAAK2B","file":"ng-dropdownsmtree.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('ngDropdownsmtree', [])\r\n.directive('ngDropdownsmtree', ['$filter', ($filter)=> {\r\n    return {\r\n        // can be used as attribute(A) or element(E)\r\n        restrict: 'AE',\r\n        require: 'ngModel',\r\n        replace:true,\r\n        // declare the directive scope as private \r\n        scope: {\r\n            childArrays: '=',            \r\n            parentArray: '=',\r\n            childArraysItemDisplayField: '@',\r\n            parentArrayItemDisplayField: '@',\r\n            childArraysItemSearchField: '@',\r\n            disabled: '=',\r\n            titlePlaceholder: '@'\r\n        },\r\n\r\n\r\n        // the markup this directive generates\r\n        template: (iElement, iAttrs) => {\r\n\r\n            const html = `<div class=\"btn-group ng-dropdownsmtree-css\">\r\n                            <button type=\"button\" class=\"btn dropdown-toggle ${iAttrs.controlClass}\" data-ng-class=\"{\\'disabled\\':disabled == true}\"   data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\r\n                                <i class=\"glyphicon glyphicon-triangle-bottom pull-right\" aria-hidden=\"true\"></i>\r\n                                 {{selectedsubjectdesc}}\r\n                            </button>            \r\n                            <ul class=\"dropdown-menu ng-dropdownsmtree-inner-dropdown-menu\" role=\"tree\">\r\n                                <li ><input type=\"text\" placeholder=\"${iAttrs.searchPlaceholder}\" aria-label=\"${iAttrs.searchPlaceholder}\" class=\"form-control\"  ng-change=\"highlightContainers()\" data-ng-model=\"SearchSubjectFLTR\" data-ng-init=\"SearchSubjectFLTR =\\'\\'\" /></li>\r\n                                <li data-ng-repeat=\"item in parentArray\" onclick=\"event.stopPropagation();\" data-ng-click=\"showSecondLevel($event)\" data-src=\"{{item[\\'${iAttrs.parentArrayItemIdField}\\']}}\" data-ng-keydown=\"onEnter($event)\" role=\"treeitem\" tabindex=\"0\" aria-expanded=\"false\">\r\n                                    <span><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span> {{item[parentArrayItemDisplayField]}}</span>\r\n                                    <ul role=\"group\" class=\"content\">\r\n                                        <li data-ng-repeat=\"sb in childArrays | filter: {${iAttrs.childArraysItemParentId}: item[\\'${iAttrs.parentArrayItemIdField}\\']}: true | filter:{${iAttrs.childArraysItemSearchField}:SearchSubjectFLTR} \">\r\n                                            <a href=\"\" data-ng-click=\"setselecteditem(sb)\" role=\"treeitem\" tabindex=\"-1\"> {{sb[childArraysItemDisplayField] }}</a>\r\n                                        </li>\r\n                                    </ul>                                    \r\n                                </li>\r\n\r\n                            </ul>\r\n                        </div>`;\r\n\r\n            return html;\r\n        },\r\n\r\n        // this function is called on each ng-Twolevelddl instance initialisation\r\n        // we just declare what we need in the above template\r\n        link: (scope, iElement, iAttrs, ctrl) => {\r\n\r\n            ctrl.$render = () => {\r\n                if(ctrl.$viewValue)\r\n                  scope.selectedsubjectdesc = ctrl.$viewValue.Description;\r\n                else\r\n                  scope.selectedsubjectdesc = scope.titlePlaceholder;\r\n            };\r\n            \r\n            scope.highlightContainers = () => {\r\n\r\n                //remove previous heighlights\r\n                const elm = $(iElement).find('ul');\r\n                elm.find(\" >li > span.has-data\").removeClass('has-data');\r\n\r\n                //height the new elements that contains the new search test\r\n                if (scope.SearchSubjectFLTR.length > 0) {\r\n                    const _arr = $filter('filter', scope.childArraysItemSearchField)(scope.childArrays, scope.SearchSubjectFLTR);\r\n                    for (let i = 0; i < _arr.length; i++) {\r\n                        if (_arr[i][iAttrs.childArraysItemParentId] === null)\r\n                            elm.find(\"[data-src=''] >span\").addClass('has-data');                        \r\n                        else\r\n                            elm.find(`[data-src=${_arr[i][iAttrs.childArraysItemParentId]}] >span`).addClass('has-data');\r\n                    }\r\n                }\r\n            };\r\n\r\n            scope.showSecondLevel = (event) => {\r\n\r\n                const clickedItem = $(event.currentTarget || event.srcElement).closest('li');\r\n                const content = clickedItem.find('.content');\r\n                if(content.css(\"display\") === \"none\")\r\n                    clickedItem.attr(\"aria-expanded\",\"false\");\r\n                else\r\n                    clickedItem.attr(\"aria-expanded\",\"true\");\r\n                \r\n                content.slideToggle(500);\r\n                clickedItem.find('.glyphicon').toggleClass('glyphicon-plus glyphicon-minus');\r\n\r\n            };\r\n\r\n            scope.onEnter = (event) =>{\r\n                if(event.keyCode === 13){\r\n                    scope.showSecondLevel(event);\r\n                }\r\n            };\r\n        \r\n            scope.setselecteditem = (sb) => {\r\n                ctrl.$setViewValue(sb);\r\n                ctrl.$render();\r\n            };\r\n\r\n        }\r\n\r\n    };\r\n}]);\r\n\r\n\r\n"]}